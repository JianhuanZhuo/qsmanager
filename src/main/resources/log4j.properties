### direct log messages to stdout ###
### 配置根Logger：log4j.rootLogger = [ level ] , appenderName1, appenderName2, ###
### 设置输出级别为 DEBUG，和，设置输出源为 控制台输出 stdout ###
log4j.rootLogger=DEBUG, stdout, dailyFile
### log4j.appender.appenderName = className ###
# className 可用的参数值为如下五个：
#(1)org.apache.log4j.ConsoleAppender（控制台）
#(2)org.apache.log4j.FileAppender（文件）
#(3)org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
#(4)org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
#(5)org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）
### stdout 输出源 ###
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
#### 这个是 stdout 的 layout（布局方式）
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#### 这个是 stdout 的 layout（布局） 参数，参数名为：ConversionPattern
log4j.appender.stdout.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n
#Threshold=WARN：指定日志信息的最低输出级别，默认为DEBUG。
#ImmediateFlush=true：表示所有消息都会被立即输出，设为false则不输出，默认值是true。
#Append=false：true表示消息增加到指定文件中，false则将消息覆盖指定的文件内容，默认值是true。
#File=D:/logs/logging.log4j：指定当前消息输出到logging.log4j文件中。
#DatePattern='.'yyyy-MM：每月滚动一次日志文件，即每月产生一个新的日志文件。
# 当前月的日志文件名为logging.log4j，前一个月的日志文件名为logging.log4j.yyyy-MM。
log4j.appender.dailyFile=org.apache.log4j.DailyRollingFileAppender
log4j.appender.dailyFile.Threshold=DEBUG
log4j.appender.dailyFile.ImmediateFlush=true
log4j.appender.dailyFile.Append=true
log4j.appender.dailyFile.File=${rootPath}/logs/log.log4j
log4j.appender.dailyFile.DatePattern='.'yyyy-MM-dd
log4j.appender.dailyFile.layout=org.apache.log4j.PatternLayout
log4j.appender.dailyFile.layout.ConversionPattern=[%-5p] %d(%r) --> [%t] %l: %m %x %n
###设置输出源为日志文件输出###
#log4j.appender.file=org.apache.log4j.FileAppender
#log4j.appender.file.File=c\:mylog.log
#log4j.appender.file.layout=org.apache.log4j.PatternLayout
#log4j.appender.file.layout.ConversionPattern=%d{ABSOLUTE} %5p %c{1}:%L - %m%n

### 特定包的日志指定
log4j.logger.org.apache.commons.beanutils=WARN,stdout
log4j.logger.org.apache.ibatis=WARN,stdout