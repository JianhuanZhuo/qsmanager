<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--

    userDao
    account
    password;
    authority
    last_login_stamp
-->
<mapper namespace="cn.keepfight.qsmanager.Mapper.OperatorMapper">

    <resultMap id="result_operator" type="OperatorDao">
        <id property="id" column="id"/>
        <result property="account" column="account"/>
        <result property="password" column="password"/>
        <result property="authority" column="authority"/>
        <result property="last_login_stamp" column="last_login_stamp"/>
        <association property="userDao" resultMap="cn.keepfight.qsmanager.Mapper.UserMapper.result_user"
                     columnPrefix="user_"/>
    </resultMap>

    <!--* 选择全部系统操作者-->
    <!--List<OperatorDao> selectAll() throws Exception;-->
    <select id="selectAll" resultMap="result_operator">
        SELECT
            operator.id               id,
            operator.account          account,
            operator.password         password,
            operator.authority        authority,
            operator.last_login_stamp last_login_stamp,
            user.id                   user_id,
            user.nickname             user_nickname,
            user.halt                 user_halt,
            user.note                 user_note
        FROM operator, user
        WHERE operator.user_id = user.id
        ORDER BY id
    </select>


    <!--* 根据系统操作者 ID 选择-->
    <!--OperatorDao selectByID(Long id) throws Exception;-->
    <select id="selectByID" parameterType="long" resultMap="result_operator">
        SELECT
            operator.id               id,
            operator.account          account,
            operator.password         password,
            operator.authority        authority,
            operator.last_login_stamp last_login_stamp,
            user.id                   user_id,
            user.nickname             user_nickname,
            user.halt                 user_halt,
            user.note                 user_note
        FROM operator, user
        WHERE operator.user_id = user.id
              AND operator.id = #{id}
    </select>

    <!--* 更新指定系统操作者，以ID为准-->
    <!--void update(OperatorDao custom) throws Exception;-->
    <update id="update" parameterType="OperatorDao">
        UPDATE operator
        SET
            account          = #{account},
            password         = #{password},
            authority        = #{authority},
            last_login_stamp = #{last_login_stamp},
            user_id          = #{userDao.id}
        WHERE id = #{id}
    </update>

    <!--* 插入指定系统操作者，插入后，该系统操作者的ID将得到更新-->
    <!--void insert(OperatorDao custom) throws Exception;-->
    <insert id="insert" parameterType="OperatorDao">
        INSERT INTO operator(
        account,
        password,
        authority,
        last_login_stamp,
        user_id
        )VALUES (
        #{account},
        #{password},
        #{authority},
        #{last_login_stamp},
        #{userDao.id}
        )
        <selectKey keyProperty="id" order="AFTER" resultType="long">
            SELECT last_insert_id();
        </selectKey>
    </insert>


    <!--* 删除指定系统操作者，以ID为准。-->
    <!--void deleteByID(Long id) throws Exception;-->
    <delete id="deleteByID" parameterType="long">
        DELETE FROM operator
        WHERE id = #{id}
    </delete>

    <!--* 根据指定口令检查系统操作者的合法性-->
    <!--* @return 若账号密码合法返回口令对应的系统操作者，否则返回 null-->
    <!--OperatorDao checkLegality(@Param("account") String account,@Param("password") String password) throws Exception;-->
    <select id="checkLegality" resultMap="result_operator">
        SELECT
            operator.id               id,
            operator.account          account,
            operator.password         password,
            operator.authority        authority,
            operator.last_login_stamp last_login_stamp,
            user.id                   user_id,
            user.nickname             user_nickname,
            user.halt                 user_halt,
            user.note                 user_note
        FROM operator, user
        WHERE operator.user_id = user.id
              AND account = #{account}
              AND password = #{password}
        LIMIT 1
    </select>

</mapper>