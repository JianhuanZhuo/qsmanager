<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.keepfight.qsmanager.Mapper.CustAnnuMapper">

    <!--选择指定年份、指定客户的年度对账表-->
    <!--CustAnnualModel selectAnnual(AnnualSelection selection) throws Exception;-->
    <select id="selectAnnual" parameterType="AnnualSelection" resultType="CustAnnualModel">
        SELECT *
        FROM cust_annual
        WHERE year == #{year}
              AND cid == #{sid}
    </select>

    <!--指定年份、指定客户查询年度对账的每月明细-->
    <!--List<CustAnnualMonModel> selectMon(AnnualSelection selection) throws Exception;-->
    <select id="selectMon" parameterType="AnnualSelection" resultType="CustAnnualMonModel">
        SELECT
            caid,
            mon,
            total,
            billunit,
            strftime('%s', billdate) || '000'  AS billdate,
            billtotal,
            rate,
            remitunit,
            pattern,
            strftime('%s', remitdate) || '000' AS remitdate,
            paytotal,
            note
        FROM cust_annual_mon sm, cust_annual s
        WHERE s.year == #{year} AND s.cid == #{sid}
              AND sm.caid == s.id
    </select>

    <!--插入新的年对账表，如果指定的年份的对账表已存在，则异常-->
    <!--void insertAnnual(CustAnnualModel model) throws Exception;-->
    <insert id="insertAnnual" parameterType="CustAnnualModel">
        insert into cust_annual (cid, year
        <if test="remainder!=null">
            , remainder
        </if>
        ) values (#{cid}, #{year}
        <if test="remainder!=null">
            , #{remainder}
        </if>);
        <selectKey keyProperty="id" order="AFTER" resultType="long">
            SELECT last_insert_rowid();
        </selectKey>
    </insert>


    <!--插入新的月明细，如果指定对账单的当前月份已存在会插入错误-->
    <!--void insertMon(CustAnnualMonModel model) throws Exception;-->
    <insert id="insertMon" parameterType="CustAnnualMonModel">
        INSERT INTO cust_annual_mon (
            caid,
            mon,
            total,
            billunit,
            billdate,
            billtotal,
            rate,
            remitunit,
            pattern,
            remitdate,
            paytotal,
            note)
        VALUES (
            #{caid},
            #{mon},
            #{total},
            #{billunit},
            DATEtime(#{billdate} / 1000, 'unixepoch', 'localtime'),
            #{billtotal},
            #{rate},
            #{remitunit},
            #{pattern},
            DATETIME(#{remitdate} / 1000, 'unixepoch', 'localtime'),
            #{paytotal},
            #{note}
        );
    </insert>

    <!--更新月明细-->
    <!--void updateMon(CustAnnualMonModel model) throws Exception;-->
    <update id="updateMon" parameterType="CustAnnualMonModel">
        UPDATE cust_annual_mon
        SET
            total     = #{total},
            billunit  = #{billunit},
            billdate  = DATEtime(#{billdate} / 1000, 'unixepoch', 'localtime'),
            billtotal = #{billtotal},
            rate      = #{rate},
            remitunit = #{remitunit},
            pattern   = #{pattern},
            remitdate = DATETIME(#{remitdate} / 1000, 'unixepoch', 'localtime'),
            paytotal  = #{paytotal},
            note      = #{note}
        WHERE caid == #{caid}
              AND mon == #{mon}
    </update>

</mapper>