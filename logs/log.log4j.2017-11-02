[DEBUG] 2017-11-02 11:32:32,273(0) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 11:32:32,296(23) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:32,351(78) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:32:36,240(3967) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 11:32:36,241(3968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:36,289(4016) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:32:49,482(17209) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 11:32:49,483(17210) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:32:49,528(17255) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:32:49,529(17256) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:32:49,529(17256) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:49,581(17308) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:32:49,618(17345) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:32:49,619(17346) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:49,667(17394) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 11:32:49,677(17404) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 11:32:49,678(17405) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:49,723(17450) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:32:49,726(17453) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:32:49,727(17454) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:32:49,773(17500) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:32:49,774(17501) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:32:49,774(17501) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:32:49,819(17546) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:32:55,124(22851) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:32:55,125(22852) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:32:55,172(22899) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:32:55,172(22899) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:32:55,172(22899) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:32:55,218(22945) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:32:58,052(25779) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 11:32:58,053(25780) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:58,100(25827) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:32:58,102(25829) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:32:58,103(25830) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:32:58,152(25879) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:33:03,959(31686) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:33:03,959(31686) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:33:04,010(31737) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:33:04,013(31740) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 11:33:04,013(31740) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:33:04,060(31787) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:05,454(33181) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:33:05,454(33181) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:33:05,503(33230) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:33:05,504(33231) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,505(33232) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:33:05,555(33282) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:05,557(33284) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,557(33284) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:33:05,606(33333) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:33:05,606(33333) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,606(33333) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:33:05,655(33382) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:33:05,655(33382) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,656(33383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:33:05,705(33432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:33:05,705(33432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,706(33433) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:33:05,754(33481) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:05,754(33481) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,754(33481) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:33:05,802(33529) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:05,803(33530) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:05,803(33530) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:33:05,851(33578) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:33:07,647(35374) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:33:07,648(35375) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:33:07,696(35423) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:11,141(38868) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:33:11,141(38868) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:33:11,141(38868) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:33:11,141(38868) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:33:11,188(38915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:33:11,189(38916) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:33:15,535(43262) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 11:33:15,535(43262) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 11:33:15,579(43306) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:33:19,588(47315) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 11:33:19,588(47315) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 11:33:19,636(47363) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:37:56,198(0) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 11:37:56,218(20) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:37:56,270(72) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:00,214(4016) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:38:00,214(4016) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:38:00,264(4066) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:38:00,266(4068) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 11:38:00,267(4069) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:38:00,312(4114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:01,325(5127) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:38:01,325(5127) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:38:01,372(5174) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:38:01,373(5175) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,373(5175) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:38:01,421(5223) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:01,422(5224) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,422(5224) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:38:01,469(5271) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:38:01,469(5271) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,470(5272) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:38:01,515(5317) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:38:01,516(5318) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,516(5318) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:38:01,563(5365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:38:01,563(5365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,563(5365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:38:01,609(5411) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:01,609(5411) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,609(5411) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:38:01,654(5456) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:01,655(5457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:01,655(5457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:38:01,701(5503) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:38:02,687(6489) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:38:02,687(6489) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:38:02,732(6534) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:04,137(7939) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:38:04,137(7939) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:38:04,137(7939) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:38:04,138(7940) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:38:04,183(7985) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:38:04,187(7989) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:38:05,422(9224) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 11:38:05,423(9225) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 11:38:05,468(9270) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:39:37,935(0) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 11:39:37,954(19) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:38,006(71) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:43,941(6006) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:39:43,941(6006) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:43,989(6054) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:39:43,991(6056) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 11:39:43,992(6057) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:44,036(6101) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:45,173(7238) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:39:45,174(7239) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:45,220(7285) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:39:45,221(7286) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,221(7286) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:39:45,268(7333) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:45,269(7334) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,270(7335) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:39:45,316(7381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:39:45,316(7381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,317(7382) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:39:45,362(7427) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:39:45,363(7428) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,363(7428) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:39:45,409(7474) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:39:45,409(7474) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,409(7474) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:39:45,454(7519) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:45,454(7519) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,455(7520) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:39:45,499(7564) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:45,500(7565) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:45,500(7565) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:39:45,545(7610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:39:46,350(8415) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 11:39:46,350(8415) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:39:46,367(8432) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:39:46,367(8432) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:39:46,396(8461) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:39:46,397(8462) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:39:46,397(8462) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:46,411(8476) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:46,447(8512) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:39:46,473(8538) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:39:46,473(8538) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:46,520(8585) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 11:39:46,537(8602) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 11:39:46,538(8603) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:46,584(8649) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:46,587(8652) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:39:46,588(8653) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:39:46,633(8698) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:46,634(8699) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:39:46,634(8699) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:39:46,679(8744) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:39:48,798(10863) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:39:48,799(10864) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:39:48,799(10864) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:39:48,799(10864) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:39:48,844(10909) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:39:48,848(10913) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:39:50,369(12434) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 11:39:50,370(12435) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 11:39:50,413(12478) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:40:13,789(35854) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 11:40:13,789(35854) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:13,834(35899) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:40:13,836(35901) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:40:13,836(35901) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:13,881(35946) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:40:18,467(40532) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:40:18,467(40532) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:18,516(40581) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:40:18,516(40581) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 11:40:18,516(40581) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:18,561(40626) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:40:19,810(41875) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:40:19,810(41875) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:19,856(41921) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:40:19,856(41921) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:19,856(41921) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:40:19,903(41968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:40:19,903(41968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:19,903(41968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:40:19,949(42014) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:40:19,949(42014) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:19,949(42014) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:40:19,996(42061) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:40:19,996(42061) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:19,996(42061) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:40:20,042(42107) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:40:20,042(42107) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:20,042(42107) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:40:20,087(42152) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:40:20,087(42152) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:20,087(42152) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:40:20,132(42197) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:40:20,133(42198) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:20,133(42198) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:40:20,178(42243) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:40:21,318(43383) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:40:21,318(43383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:40:21,318(43383) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:40:21,318(43383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:40:21,364(43429) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:40:21,389(43454) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:40:21,389(43454) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:40:21,389(43454) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:40:21,435(43500) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:23,371(105436) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:41:23,372(105437) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:41:23,418(105483) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:41:24,821(106886) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:41:24,821(106886) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:41:24,867(106932) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:41:24,874(106939) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull(trade.m, 0) + ifnull(inv.m, 0) - ifnull(remit.m, 0) AS annualleft FROM (# 发票税金 SELECT sum(ifnull(inv.total * inv.rate, 0)) AS m FROM invoice_sup inv WHERE sup_id = ? AND year < ?) AS inv, (# 付款金额 SELECT sum(ifnull(remit.total, 0)) AS m FROM remit_sup remit WHERE sup_id = ? AND year < ?) AS remit , (# 交易金额 SELECT sum(ifnull(d.price * d.num, 0)) AS m FROM receipt r, receipt_detail d WHERE r.id = d.rid AND DATE_FORMAT(r.rdate, '%Y') < ? AND sid = ?) AS trade;   
[DEBUG] 2017-11-02 11:41:24,874(106939) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 4(Long), 2017(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 11:41:24,920(106985) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:24,921(106986) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT mons.mon AS month, ifnull(an.sum, 0) AS tradeTotal FROM mons LEFT JOIN ( SELECT DATE_FORMAT(r.rdate, '%m') AS m, sum(d.num * d.price) AS sum FROM receipt r, receipt_detail d WHERE r.id = d.rid AND r.sid = ? AND DATE_FORMAT(r.rdate, '%Y') = ? GROUP BY DATE_FORMAT(r.rdate, '%m') ) AS an ON mons.mon = an.m ORDER BY mons.mon;   
[DEBUG] 2017-11-02 11:41:24,921(106986) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long)  
[DEBUG] 2017-11-02 11:41:24,968(107033) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 12  
[DEBUG] 2017-11-02 11:41:24,969(107034) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:24,970(107035) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 11:41:25,015(107080) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:25,016(107081) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,017(107082) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 11:41:25,061(107126) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,062(107127) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,062(107127) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 11:41:25,108(107173) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:25,108(107173) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,108(107173) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 11:41:25,153(107218) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,153(107218) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,154(107219) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 11:41:25,199(107264) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:25,199(107264) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,199(107264) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 11:41:25,244(107309) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,244(107309) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,245(107310) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 11:41:25,290(107355) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,290(107355) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,291(107356) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 11:41:25,336(107401) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,336(107401) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,336(107401) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 11:41:25,381(107446) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:41:25,382(107447) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,382(107447) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 11:41:25,427(107492) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:25,428(107493) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,428(107493) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 11:41:25,473(107538) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,473(107538) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,473(107538) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 11:41:25,519(107584) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,519(107584) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,519(107584) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 11:41:25,565(107630) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,565(107630) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,565(107630) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 11:41:25,859(107924) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:41:25,859(107924) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,859(107924) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 11:41:25,904(107969) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,904(107969) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,904(107969) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 11:41:25,950(108015) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,950(108015) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,950(108015) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 11:41:25,996(108061) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:25,996(108061) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:25,996(108061) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 11:41:26,042(108107) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:26,042(108107) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,042(108107) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 11:41:26,087(108152) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:41:26,088(108153) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,088(108153) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 11:41:26,134(108199) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:26,134(108199) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,134(108199) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:41:26,179(108244) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:26,179(108244) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,180(108245) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:41:26,225(108290) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:26,225(108290) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,226(108291) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 11:41:26,271(108336) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:26,271(108336) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 11:41:26,271(108336) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 11:41:26,316(108381) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:41:33,181(115246) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 11:41:33,182(115247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 11:41:33,227(115292) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:41:33,229(115294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,229(115294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 11:41:33,275(115340) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:41:33,275(115340) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,276(115341) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 11:41:33,321(115386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:33,321(115386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,321(115386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 11:41:33,366(115431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:33,366(115431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,366(115431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:41:33,411(115476) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:33,411(115476) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,412(115477) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:41:33,456(115521) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:41:33,456(115521) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 11:41:33,456(115521) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 11:41:33,501(115566) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:10,076(152141) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.mon AS month, ifnull(total, 0) AS total, ifnull(sum, 0) AS given FROM mons m LEFT JOIN ( SELECT month, sum(salary) AS total, sum(ifnull(sum, 0)) AS sum FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.year = ? GROUP BY month ) x ON x.month = m.mon ORDER BY m.mon   
[DEBUG] 2017-11-02 11:42:10,077(152142) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long)  
[DEBUG] 2017-11-02 11:42:10,124(152189) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 12  
[DEBUG] 2017-11-02 11:42:10,130(152195) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: # selectStuffSalaryTardy SELECT u.id AS id, u.name AS name, sum(salary - ifnull(sum, 0)) AS sum FROM stuff u, stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE # 检查还没还完的 (ifnull(sum, 0) < salary) AND u.id = s.stuff_id GROUP BY stuff_id;   
[DEBUG] 2017-11-02 11:42:10,130(152195) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:10,177(152242) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 10  
[DEBUG] 2017-11-02 11:42:10,177(152242) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,178(152243) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:42:10,224(152289) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,225(152290) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,225(152290) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 3(Long)  
[DEBUG] 2017-11-02 11:42:10,272(152337) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,272(152337) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,272(152337) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long)  
[DEBUG] 2017-11-02 11:42:10,319(152384) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,320(152385) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,320(152385) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 6(Long)  
[DEBUG] 2017-11-02 11:42:10,366(152431) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,367(152432) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,367(152432) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:10,413(152478) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,413(152478) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,414(152479) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 11:42:10,460(152525) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,460(152525) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,460(152525) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 9(Long)  
[DEBUG] 2017-11-02 11:42:10,507(152572) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,507(152572) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,507(152572) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 10(Long)  
[DEBUG] 2017-11-02 11:42:10,554(152619) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,554(152619) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,554(152619) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 11(Long)  
[DEBUG] 2017-11-02 11:42:10,601(152666) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:10,601(152666) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:10,602(152667) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 12(Long)  
[DEBUG] 2017-11-02 11:42:10,648(152713) --> [Thread-68] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,048(158113) --> [Thread-70] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.mon AS month, ifnull(total, 0) AS total, ifnull(sum, 0) AS given FROM mons m LEFT JOIN ( SELECT month, sum(salary) AS total, sum(ifnull(sum, 0)) AS sum FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.year = ? GROUP BY month ) x ON x.month = m.mon ORDER BY m.mon   
[DEBUG] 2017-11-02 11:42:16,049(158114) --> [Thread-70] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long)  
[DEBUG] 2017-11-02 11:42:16,096(158161) --> [Thread-70] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 12  
[DEBUG] 2017-11-02 11:42:16,100(158165) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: # selectStuffSalaryTardy SELECT u.id AS id, u.name AS name, sum(salary - ifnull(sum, 0)) AS sum FROM stuff u, stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE # 检查还没还完的 (ifnull(sum, 0) < salary) AND u.id = s.stuff_id GROUP BY stuff_id;   
[DEBUG] 2017-11-02 11:42:16,101(158166) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:16,148(158213) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 10  
[DEBUG] 2017-11-02 11:42:16,148(158213) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,148(158213) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:42:16,195(158260) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,195(158260) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,195(158260) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 3(Long)  
[DEBUG] 2017-11-02 11:42:16,243(158308) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,244(158309) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,244(158309) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long)  
[DEBUG] 2017-11-02 11:42:16,290(158355) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,290(158355) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,291(158356) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 6(Long)  
[DEBUG] 2017-11-02 11:42:16,337(158402) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,337(158402) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,337(158402) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:16,384(158449) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,384(158449) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,384(158449) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 11:42:16,430(158495) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,431(158496) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,431(158496) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 9(Long)  
[DEBUG] 2017-11-02 11:42:16,478(158543) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,478(158543) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,478(158543) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 10(Long)  
[DEBUG] 2017-11-02 11:42:16,525(158590) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,525(158590) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,525(158590) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 11(Long)  
[DEBUG] 2017-11-02 11:42:16,572(158637) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:16,572(158637) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT m.ym AS ym, ifnull(sum, 0) AS sum, sid AS salary_id FROM ( # 获得全部需要还的年月份 SELECT DISTINCT concat(year, '-', lpad(month, 2, '0')) AS ym FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.salary > ifnull(x.sum, 0) ) AS m LEFT JOIN ( # 获得指定需要还的 SELECT concat(year, '-', lpad(month, 2, '0')) AS ym, salary - ifnull(sum, 0) AS sum, s.id AS sid FROM stuff_salary s LEFT JOIN ( SELECT i.salary_id, sum(i.income) sum FROM stuff_income i GROUP BY i.salary_id ) x ON s.id = x.salary_id WHERE s.stuff_id = ? ) AS s ON m.ym = s.ym ORDER BY m.ym DESC   
[DEBUG] 2017-11-02 11:42:16,572(158637) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 12(Long)  
[DEBUG] 2017-11-02 11:42:16,619(158684) --> [Thread-71] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 11:42:19,988(162053) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:42:19,989(162054) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:20,034(162099) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:20,034(162099) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:42:20,035(162100) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:20,080(162145) --> [Thread-73] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:23,036(165101) --> [Thread-75] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:42:23,036(165101) --> [Thread-75] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:23,081(165146) --> [Thread-75] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:42:24,508(166573) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 11:42:24,509(166574) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:24,553(166618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:42:26,188(168253) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 11:42:26,188(168253) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:26,233(168298) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:26,234(168299) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:26,234(168299) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:26,282(168347) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:42:26,312(168377) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:26,312(168377) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:26,359(168424) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 11:42:26,366(168431) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 11:42:26,366(168431) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:26,411(168476) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:26,413(168478) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:42:26,413(168478) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:26,458(168523) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:26,458(168523) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:42:26,458(168523) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:26,503(168568) --> [Thread-79] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:30,715(172780) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 11:42:30,716(172781) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:30,761(172826) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:30,761(172826) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:30,762(172827) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:30,809(172874) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:42:30,838(172903) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:30,838(172903) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:30,885(172950) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 11:42:30,893(172958) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 11:42:30,893(172958) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:30,939(173004) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:30,941(173006) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:42:30,941(173006) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:30,986(173051) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:30,986(173051) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:42:30,986(173051) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:31,031(173096) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:33,870(175935) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 11:42:33,870(175935) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:33,915(175980) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:33,916(175981) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:33,916(175981) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:33,964(176029) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:42:33,988(176053) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 11:42:33,989(176054) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:34,036(176101) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 11:42:34,044(176109) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 11:42:34,044(176109) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:34,089(176154) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:34,092(176157) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 11:42:34,092(176157) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 11:42:34,137(176202) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:42:34,138(176203) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 11:42:34,138(176203) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 11:42:34,183(176248) --> [Thread-82] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:42:37,691(179756) --> [Thread-84] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:42:37,692(179757) --> [Thread-84] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:37,737(179802) --> [Thread-84] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:42:39,924(181989) --> [Thread-86] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:42:39,924(181989) --> [Thread-86] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:39,969(182034) --> [Thread-86] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:42:52,273(194338) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:42:52,273(194338) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:42:52,318(194383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:42:54,331(196396) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 11:42:54,332(196397) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 11:42:54,377(196442) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:43:32,943(235008) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:43:32,943(235008) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:43:32,943(235008) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:43:32,943(235008) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:43:32,988(235053) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:43:32,988(235053) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:43:32,989(235054) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:43:32,990(235055) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:43:33,033(235098) --> [Thread-98] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:47,191(0) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 11:56:47,211(20) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:47,265(74) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:51,029(3838) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 11:56:51,029(3838) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:51,077(3886) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:56:51,079(3888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 11:56:51,079(3888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:51,127(3936) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 11:56:52,378(5187) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:56:52,378(5187) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:52,428(5237) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:56:52,431(5240) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 11:56:52,431(5240) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:52,478(5287) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:53,955(6764) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:56:53,956(6765) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:54,004(6813) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:56:54,005(6814) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,006(6815) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:56:54,055(6864) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:54,057(6866) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,057(6866) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:56:54,106(6915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:56:54,106(6915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,106(6915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:56:54,155(6964) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:56:54,155(6964) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,155(6964) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:56:54,204(7013) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:56:54,204(7013) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,204(7013) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:56:54,252(7061) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:54,252(7061) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,253(7062) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:56:54,300(7109) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:54,301(7110) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:54,301(7110) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:56:54,349(7158) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 11:56:55,100(7909) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:56:55,100(7909) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:56:55,150(7959) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:56:59,516(12325) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:56:59,517(12326) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:56:59,563(12372) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:56:59,564(12373) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:56:59,564(12373) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:56:59,612(12421) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:58:55,873(128682) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 11:58:55,874(128683) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 11:58:55,920(128729) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 11:58:59,911(132720) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: UPDATE orders SET serial = ?, cid = ?, orderdate = from_unixtime(?/1000), note = ?, deli = ? WHERE id = ?   
[DEBUG] 2017-11-02 11:58:59,911(132720) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 171101001(String), 13(Long), 1509465600000(Long), null, true(Boolean), 36(Long)  
[DEBUG] 2017-11-02 11:59:00,040(132849) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 11:59:00,041(132850) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:00,041(132850) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:59:00,142(132951) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 11:59:00,144(132953) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO order_item (oid, num, rate, rebate, delifee, serial, name, detail, pack, packDefault, price, unit, picurl) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 11:59:00,145(132954) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long), 1E+2(BigDecimal), 0(BigDecimal), 0(BigDecimal), 0(BigDecimal), C15(String), 15克不锈钢软丝刷(String), 7,840.00(String), 25480(Long), 25480(Long), 1.259(BigDecimal), 箱(String), null  
[DEBUG] 2017-11-02 11:59:00,250(133059) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 11:59:00,250(133059) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 11:59:00,250(133059) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:59:00,297(133106) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:05,827(138636) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 11:59:05,827(138636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 11:59:05,827(138636) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:59:05,827(138636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:59:05,875(138684) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:05,875(138684) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:05,875(138684) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:59:05,877(138686) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 11:59:05,923(138732) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:11,767(144576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 11:59:11,767(144576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 11:59:11,816(144625) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 11:59:11,817(144626) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:11,817(144626) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 11:59:11,864(144673) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:11,864(144673) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:11,864(144673) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 11:59:11,912(144721) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:59:11,912(144721) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:11,912(144721) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 11:59:11,960(144769) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:59:11,960(144769) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:11,960(144769) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 11:59:12,009(144818) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 11:59:12,010(144819) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:12,010(144819) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 11:59:12,057(144866) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:12,057(144866) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:12,057(144866) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 11:59:12,105(144914) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 11:59:12,105(144914) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 11:59:12,106(144915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 11:59:12,152(144961) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:04:19,863(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:04:19,881(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:19,944(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:04:23,355(3492) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:04:23,356(3493) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:23,402(3539) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:27,098(7235) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:04:27,098(7235) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:27,146(7283) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:04:29,066(9203) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:04:29,066(9203) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:29,112(9249) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:04:29,112(9249) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:04:29,112(9249) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:29,160(9297) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:04:35,456(15593) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:04:35,457(15594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:35,506(15643) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:04:35,508(15645) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 12:04:35,509(15646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:35,555(15692) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:36,890(17027) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:04:36,890(17027) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:36,938(17075) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:04:36,939(17076) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:36,940(17077) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:04:36,988(17125) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:36,989(17126) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:36,989(17126) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:04:37,037(17174) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:04:37,037(17174) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:37,037(17174) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:04:37,085(17222) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:04:37,085(17222) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:37,086(17223) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:04:37,132(17269) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:04:37,133(17270) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:37,133(17270) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:04:37,179(17316) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:37,180(17317) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:37,180(17317) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:04:37,227(17364) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:37,228(17365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:37,228(17365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:04:37,275(17412) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:04:38,098(18235) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:04:38,098(18235) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:04:38,146(18283) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:04:42,523(22660) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:04:42,524(22661) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:04:42,573(22710) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:04:42,573(22710) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:04:42,574(22711) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:04:42,620(22757) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:05:53,386(93523) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:05:53,386(93523) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:05:53,433(93570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:05:57,324(97461) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:05:57,325(97462) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:05:57,371(97508) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:06:02,246(102383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: UPDATE orders SET serial = ?, cid = ?, orderdate = from_unixtime(?/1000), note = ?, deli = ? WHERE id = ?   
[DEBUG] 2017-11-02 12:06:02,246(102383) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 171101001(String), 13(Long), 1509465600000(Long), null, true(Boolean), 36(Long)  
[DEBUG] 2017-11-02 12:06:02,361(102498) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:06:02,361(102498) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:02,362(102499) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:06:02,461(102598) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:06:02,462(102599) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO order_item (oid, num, rate, rebate, delifee, serial, name, detail, pack, packDefault, price, unit, picurl) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 12:06:02,463(102600) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long), 101(BigDecimal), 0(BigDecimal), 0(BigDecimal), 0(BigDecimal), C15(String), 15克不锈钢软丝刷(String), 7,840.00(String), 25480(Long), 25480(Long), 1.259(BigDecimal), 箱(String), null  
[DEBUG] 2017-11-02 12:06:02,565(102702) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:06:02,565(102702) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:06:02,565(102702) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:06:02,612(102749) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:06:06,151(106288) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:06:06,151(106288) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:06:06,198(106335) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:06:06,198(106335) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,198(106335) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:06:06,247(106384) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:06:06,248(106385) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,248(106385) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:06:06,295(106432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:06:06,295(106432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,295(106432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:06:06,343(106480) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:06:06,343(106480) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,344(106481) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:06:06,391(106528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:06:06,391(106528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,391(106528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:06:06,439(106576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:06:06,439(106576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,439(106576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:06:06,486(106623) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:06:06,486(106623) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:06:06,486(106623) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:06:06,534(106671) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:07:39,217(199354) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:07:39,218(199355) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:07:39,218(199355) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:07:39,218(199355) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:07:39,265(199402) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:07:39,265(199402) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:07:39,266(199403) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:07:39,266(199403) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:07:39,312(199449) --> [Thread-53] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:13,902(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:14:13,921(19) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:13,985(83) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:14:16,616(2714) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:14:16,616(2714) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:16,669(2767) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:20,792(6890) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:14:20,793(6891) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:20,847(6945) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:14:23,574(9672) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:14:23,575(9673) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:23,629(9727) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:14:23,631(9729) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 12:14:23,632(9730) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:23,684(9782) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:25,104(11202) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:14:25,105(11203) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:25,158(11256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:14:25,159(11257) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,160(11258) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:14:25,215(11313) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:25,216(11314) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,217(11315) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:14:25,270(11368) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:14:25,271(11369) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,271(11369) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:14:25,325(11423) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:14:25,325(11423) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,325(11423) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:14:25,379(11477) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:14:25,379(11477) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,379(11477) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:14:25,432(11530) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:25,432(11530) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,432(11530) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:14:25,485(11583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:25,485(11583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:25,485(11583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:14:25,538(11636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:14:26,401(12499) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:14:26,401(12499) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:14:26,455(12553) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:14:29,347(15445) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:14:29,348(15446) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:14:29,393(15491) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:14:29,393(15491) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:14:29,394(15492) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:14:29,447(15545) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:15:12,388(58486) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:15:12,389(58487) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:15:12,434(58532) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:14,998(121096) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:16:14,999(121097) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:15,052(121150) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:16:16,839(122937) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:16:16,840(122938) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:16,886(122984) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:16:21,149(127247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:16:21,149(127247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:21,204(127302) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:16:21,204(127302) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 12:16:21,204(127302) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:21,249(127347) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:21,501(127599) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull(trade.m, 0) + ifnull(inv.m, 0) - ifnull(remit.m, 0) AS annualleft FROM (# 发票税金 SELECT sum(ifnull(inv.total * inv.rate, 0)) AS m FROM invoice_sup inv WHERE sup_id = ? AND year < ?) AS inv, (# 付款金额 SELECT sum(ifnull(remit.total, 0)) AS m FROM remit_sup remit WHERE sup_id = ? AND year < ?) AS remit , (# 交易金额 SELECT sum(ifnull(d.price * d.num, 0)) AS m FROM receipt r, receipt_detail d WHERE r.id = d.rid AND DATE_FORMAT(r.rdate, '%Y') < ? AND sid = ?) AS trade;   
[DEBUG] 2017-11-02 12:16:21,502(127600) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long), 2017(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:16:21,548(127646) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:21,549(127647) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT mons.mon AS month, ifnull(an.sum, 0) AS tradeTotal FROM mons LEFT JOIN ( SELECT DATE_FORMAT(r.rdate, '%m') AS m, sum(d.num * d.price) AS sum FROM receipt r, receipt_detail d WHERE r.id = d.rid AND r.sid = ? AND DATE_FORMAT(r.rdate, '%Y') = ? GROUP BY DATE_FORMAT(r.rdate, '%m') ) AS an ON mons.mon = an.m ORDER BY mons.mon;   
[DEBUG] 2017-11-02 12:16:21,549(127647) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long)  
[DEBUG] 2017-11-02 12:16:21,597(127695) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 12  
[DEBUG] 2017-11-02 12:16:21,598(127696) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,599(127697) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 12:16:21,645(127743) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,646(127744) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,646(127744) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 12:16:21,694(127792) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,694(127792) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,694(127792) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 12:16:21,741(127839) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,741(127839) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,741(127839) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 12:16:21,787(127885) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,787(127885) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,788(127886) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 12:16:21,834(127932) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,835(127933) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,835(127933) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 12:16:21,881(127979) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,881(127979) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,881(127979) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 12:16:21,927(128025) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,928(128026) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,928(128026) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 12:16:21,974(128072) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:21,975(128073) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:21,975(128073) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:16:22,022(128120) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:22,022(128120) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,022(128120) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:16:22,068(128166) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,069(128167) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,069(128167) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 12:16:22,115(128213) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,115(128213) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,116(128214) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 12:16:22,161(128259) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,161(128259) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,162(128260) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 12:16:22,208(128306) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,208(128306) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,208(128306) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 12:16:22,254(128352) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,255(128353) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,255(128353) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 12:16:22,301(128399) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,301(128399) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,302(128400) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 12:16:22,348(128446) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,348(128446) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,348(128446) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 12:16:22,381(128479) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:16:22,382(128480) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:22,394(128492) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,395(128493) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,395(128493) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 12:16:22,434(128532) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:16:22,435(128533) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,435(128533) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:22,444(128542) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,444(128542) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,444(128542) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 12:16:22,484(128582) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:22,485(128583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,485(128583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:16:22,490(128588) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,491(128589) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,491(128589) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 12:16:22,537(128635) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,537(128635) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,537(128635) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:16:22,538(128636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:22,538(128636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,538(128636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:16:22,583(128681) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,584(128682) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,584(128682) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:16:22,584(128682) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:22,585(128683) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,585(128683) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:16:22,629(128727) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,630(128728) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,631(128729) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 12:16:22,638(128736) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:22,638(128736) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,638(128736) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:16:22,676(128774) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,676(128774) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:16:22,677(128775) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 12:16:22,684(128782) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:22,685(128783) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,685(128783) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:16:22,723(128821) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:16:22,737(128835) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:22,738(128836) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:22,738(128836) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:16:22,784(128882) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:16:27,261(133359) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:16:27,261(133359) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:16:27,315(133413) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:16:27,315(133413) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,316(133414) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:27,361(133459) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:27,361(133459) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,361(133459) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:16:27,415(133513) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:27,415(133513) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,415(133513) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:16:27,462(133560) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:27,462(133560) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,463(133561) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:16:27,515(133613) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:16:27,516(133614) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,516(133614) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:16:27,563(133661) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:27,563(133661) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,563(133661) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:16:27,616(133714) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:27,616(133714) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:27,617(133715) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:16:27,662(133760) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:16:39,139(145237) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:39,139(145237) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:39,191(145289) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,192(145290) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:39,192(145290) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:39,237(145335) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,238(145336) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:39,238(145336) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:39,291(145389) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,298(145396) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:39,298(145396) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:39,343(145441) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,359(145457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:39,359(145457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:39,411(145509) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,412(145510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:39,412(145510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:39,458(145556) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,459(145557) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:39,459(145557) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:39,511(145609) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:39,514(145612) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:39,514(145612) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:39,559(145657) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:44,295(150393) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:44,295(150393) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:44,348(150446) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:44,348(150446) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:44,348(150446) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:44,394(150492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:44,394(150492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:44,394(150492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:44,446(150544) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:44,450(150548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:44,450(150548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:44,495(150593) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:46,309(152407) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:46,309(152407) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:46,361(152459) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:46,362(152460) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:46,362(152460) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:46,408(152506) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:46,408(152506) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:46,408(152506) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:46,461(152559) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:48,233(154331) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:48,234(154332) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:48,279(154377) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:48,279(154377) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:48,279(154377) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:48,332(154430) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:50,143(156241) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:50,143(156241) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:50,189(156287) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:50,189(156287) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:50,190(156288) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:50,242(156340) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:50,243(156341) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:50,243(156341) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:50,288(156386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:50,291(156389) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:50,291(156389) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:50,344(156442) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:52,368(158466) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:52,368(158466) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:52,413(158511) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:52,414(158512) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:52,414(158512) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:52,466(158564) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:52,467(158565) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:52,467(158565) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:52,512(158610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:52,515(158613) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:52,515(158613) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:52,568(158666) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:54,744(160842) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:16:54,744(160842) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:54,789(160887) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:54,790(160888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:16:54,790(160888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:16:54,842(160940) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:54,843(160941) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE id = ?   
[DEBUG] 2017-11-02 12:16:54,843(160941) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:54,888(160986) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:16:54,892(160990) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:16:54,892(160990) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 12:16:54,945(161043) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:17:25,373(191471) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:17:25,373(191471) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:17:25,419(191517) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:17:25,419(191517) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,419(191517) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:17:25,471(191569) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:17:25,472(191570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,472(191570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:17:25,518(191616) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:17:25,518(191616) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,518(191616) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:17:25,571(191669) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:17:25,571(191669) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,572(191670) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:17:25,617(191715) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:17:25,617(191715) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,618(191716) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:17:25,670(191768) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:17:25,670(191768) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,670(191768) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:17:25,716(191814) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:17:25,717(191815) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:25,717(191815) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:17:25,770(191868) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:17:31,604(197702) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:17:31,604(197702) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:17:31,605(197703) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:17:31,605(197703) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:17:31,650(197748) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:17:31,650(197748) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:17:31,650(197748) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:17:31,658(197756) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:17:31,695(197793) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:03,761(229859) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 12:18:03,762(229860) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:03,811(229909) --> [Thread-57] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 12:18:04,449(230547) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 12:18:04,450(230548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:04,506(230604) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 12:18:05,215(231313) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 12:18:05,215(231313) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:05,266(231364) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 12:18:13,039(239137) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 12:18:13,040(239138) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:13,089(239187) --> [Thread-67] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 12:18:13,430(239528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:18:13,431(239529) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:13,476(239574) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:18:15,047(241145) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:18:15,047(241145) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:15,100(241198) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:18:26,640(252738) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 12:18:26,640(252738) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:18:26,687(252785) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:26,688(252786) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 12:18:26,688(252786) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:26,738(252836) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:18:26,781(252879) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 12:18:26,781(252879) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:26,828(252926) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:18:26,840(252938) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 12:18:26,840(252938) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:26,886(252984) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:26,889(252987) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:26,890(252988) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:18:26,936(253034) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:26,936(253034) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 12:18:26,936(253034) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 12:18:26,983(253081) --> [Thread-78] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:29,093(255191) --> [Thread-80] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:18:29,094(255192) --> [Thread-80] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:29,140(255238) --> [Thread-80] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:18:30,561(256659) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:18:30,561(256659) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:30,614(256712) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:18:30,621(256719) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull(trade.m, 0) + ifnull(inv.m, 0) - ifnull(remit.m, 0) AS annualleft FROM (# 发票税金 SELECT sum(ifnull(inv.total * inv.rate, 0)) AS m FROM invoice_sup inv WHERE sup_id = ? AND year < ?) AS inv, (# 付款金额 SELECT sum(ifnull(remit.total, 0)) AS m FROM remit_sup remit WHERE sup_id = ? AND year < ?) AS remit , (# 交易金额 SELECT sum(ifnull(d.price * d.num, 0)) AS m FROM receipt r, receipt_detail d WHERE r.id = d.rid AND DATE_FORMAT(r.rdate, '%Y') < ? AND sid = ?) AS trade;   
[DEBUG] 2017-11-02 12:18:30,621(256719) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long), 2017(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:18:30,668(256766) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:30,668(256766) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT mons.mon AS month, ifnull(an.sum, 0) AS tradeTotal FROM mons LEFT JOIN ( SELECT DATE_FORMAT(r.rdate, '%m') AS m, sum(d.num * d.price) AS sum FROM receipt r, receipt_detail d WHERE r.id = d.rid AND r.sid = ? AND DATE_FORMAT(r.rdate, '%Y') = ? GROUP BY DATE_FORMAT(r.rdate, '%m') ) AS an ON mons.mon = an.m ORDER BY mons.mon;   
[DEBUG] 2017-11-02 12:18:30,668(256766) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long)  
[DEBUG] 2017-11-02 12:18:30,715(256813) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 12  
[DEBUG] 2017-11-02 12:18:30,716(256814) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,716(256814) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 12:18:30,762(256860) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,762(256860) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,762(256860) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 1(Long)  
[DEBUG] 2017-11-02 12:18:30,808(256906) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,808(256906) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,809(256907) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 12:18:30,855(256953) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,855(256953) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,856(256954) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 2(Long)  
[DEBUG] 2017-11-02 12:18:30,901(256999) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,902(257000) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,902(257000) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 12:18:30,948(257046) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,948(257046) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,948(257046) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 3(Long)  
[DEBUG] 2017-11-02 12:18:30,994(257092) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:30,994(257092) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:30,995(257093) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 12:18:31,041(257139) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,041(257139) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,041(257139) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 4(Long)  
[DEBUG] 2017-11-02 12:18:31,087(257185) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,088(257186) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,088(257186) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:18:31,134(257232) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:31,134(257232) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,135(257233) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 5(Long)  
[DEBUG] 2017-11-02 12:18:31,180(257278) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,180(257278) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,181(257279) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 12:18:31,227(257325) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,227(257325) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,227(257325) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 6(Long)  
[DEBUG] 2017-11-02 12:18:31,273(257371) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,273(257371) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,273(257371) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 12:18:31,319(257417) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,319(257417) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,320(257418) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 7(Long)  
[DEBUG] 2017-11-02 12:18:31,366(257464) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,366(257464) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,366(257464) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 12:18:31,412(257510) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,412(257510) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,412(257510) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 12:18:31,458(257556) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,459(257557) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,459(257557) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 12:18:31,505(257603) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,505(257603) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,506(257604) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 12:18:31,552(257650) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,552(257650) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,552(257650) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 12:18:31,598(257696) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,598(257696) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,599(257697) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 12:18:31,644(257742) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,645(257743) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,645(257743) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:18:31,691(257789) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,691(257789) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,691(257789) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 12:18:31,737(257835) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,737(257835) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM invoice_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,737(257835) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 12:18:31,783(257881) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:31,783(257881) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM remit_sup WHERE sup_id = ? AND year = ? AND month = ?   
[DEBUG] 2017-11-02 12:18:31,784(257882) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2017(Long), 12(Long)  
[DEBUG] 2017-11-02 12:18:31,830(257928) --> [Thread-81] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:18:38,013(264111) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:18:38,013(264111) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:38,058(264156) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:18:38,059(264157) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,059(264157) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:38,111(264209) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:38,112(264210) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,112(264210) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:18:38,158(264256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:38,158(264256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,158(264256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:18:38,211(264309) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:38,212(264310) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,212(264310) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:18:38,258(264356) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:38,258(264356) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,258(264356) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:18:38,311(264409) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:38,311(264409) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,311(264409) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:18:38,359(264457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:38,359(264457) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:38,360(264458) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:18:38,412(264510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:18:41,562(267660) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:18:41,562(267660) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:18:41,562(267660) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:41,562(267660) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:41,607(267705) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:41,608(267706) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:41,608(267706) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:41,614(267712) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:18:41,653(267751) --> [Thread-88] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:47,700(273798) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:18:47,700(273798) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:47,753(273851) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:18:47,754(273852) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:47,754(273852) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:47,799(273897) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:47,800(273898) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:47,800(273898) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:18:47,853(273951) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:47,854(273952) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:47,854(273952) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:18:47,900(273998) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:47,900(273998) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:47,901(273999) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:18:47,954(274052) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:18:47,954(274052) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:47,954(274052) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:18:48,000(274098) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:48,000(274098) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:48,000(274098) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:18:48,053(274151) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:48,053(274151) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:48,053(274151) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:18:48,099(274197) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:18:49,641(275739) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:18:49,642(275740) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:18:49,642(275740) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:49,642(275740) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:18:49,689(275787) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:18:49,694(275792) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:49,694(275792) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:18:49,694(275792) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:18:49,739(275837) --> [Thread-91] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:18:51,520(277618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:18:51,521(277619) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:18:51,573(277671) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:19:24,492(310590) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:19:24,492(310590) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:19:24,538(310636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:19:24,538(310636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,538(310636) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:19:24,591(310689) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:19:24,591(310689) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,591(310689) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:19:24,637(310735) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:19:24,637(310735) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,637(310735) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:19:24,690(310788) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:19:24,691(310789) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,691(310789) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:19:24,737(310835) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:19:24,737(310835) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,737(310835) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:19:24,790(310888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:19:24,790(310888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,790(310888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:19:24,835(310933) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:19:24,836(310934) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:24,836(310934) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:19:24,889(310987) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:19:48,274(334372) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:19:48,274(334372) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:19:48,274(334372) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:19:48,274(334372) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:19:48,320(334418) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:19:48,327(334425) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:19:48,327(334425) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:19:48,327(334425) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:19:48,372(334470) --> [Thread-94] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:19:55,862(341960) --> [Thread-102] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 12:19:55,863(341961) --> [Thread-102] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:19:55,911(342009) --> [Thread-102] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 12:20:45,217(391315) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:20:45,217(391315) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:20:45,270(391368) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:20:45,270(391368) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:20:45,270(391368) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:20:45,316(391414) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:20:48,544(394642) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:20:48,544(394642) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 12:20:48,597(394695) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:20:48,599(394697) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:20:48,599(394697) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:20:48,645(394743) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:20:48,646(394744) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:20:48,646(394744) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 12:20:48,699(394797) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:20:48,699(394797) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:20:48,699(394797) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 12:20:48,744(394842) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:20:48,744(394842) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:20:48,745(394843) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:20:48,797(394895) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:20:52,592(398690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:20:52,592(398690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:20:52,639(398737) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:20:56,979(403077) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:20:56,979(403077) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:20:57,032(403130) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:20:59,790(405888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:20:59,790(405888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:20:59,836(405934) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:21:31,500(437598) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:21:31,501(437599) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:21:31,554(437652) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:21:33,100(439198) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:21:33,100(439198) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:21:33,146(439244) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:21:59,608(465706) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:21:59,608(465706) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:21:59,661(465759) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:22:07,520(473618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:22:07,520(473618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:22:07,566(473664) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:25:28,212(674310) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:25:28,212(674310) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:25:28,265(674363) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:25:28,265(674363) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,265(674363) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:25:28,311(674409) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:25:28,312(674410) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,312(674410) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:25:28,365(674463) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:25:28,365(674463) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,365(674463) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:25:28,412(674510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:25:28,412(674510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,412(674510) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:25:28,466(674564) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:25:28,466(674564) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,466(674564) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:25:28,512(674610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:25:28,512(674610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,512(674610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:25:28,565(674663) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:25:28,565(674663) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:28,565(674663) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:25:28,611(674709) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:25:29,504(675602) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:25:29,504(675602) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:25:29,504(675602) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:25:29,504(675602) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:25:29,551(675649) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:25:29,556(675654) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:25:29,557(675655) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:25:29,557(675655) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:25:29,602(675700) --> [Thread-113] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:25:30,874(676972) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:25:30,875(676973) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:25:30,927(677025) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:25:56,965(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:25:56,984(19) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:25:57,041(76) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:25:57,105(140) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'engwei'   
[DEBUG] 2017-11-02 12:25:57,106(141) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:25:57,151(186) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:26:00,621(3656) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:26:00,622(3657) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:00,668(3703) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:05,317(8352) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:26:05,317(8352) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:05,365(8400) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:26:05,368(8403) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 12:26:05,368(8403) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:05,413(8448) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:07,199(10234) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:26:07,199(10234) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:07,247(10282) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:26:07,248(10283) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,248(10283) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:26:07,296(10331) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:07,297(10332) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,297(10332) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:26:07,345(10380) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:07,346(10381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,346(10381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:26:07,393(10428) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:07,393(10428) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,393(10428) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:26:07,440(10475) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:07,440(10475) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,441(10476) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:26:07,488(10523) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:07,488(10523) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,488(10523) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:26:07,535(10570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:07,535(10570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:07,535(10570) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:26:07,582(10617) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:26:08,631(11666) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:26:08,631(11666) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:08,679(11714) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:26:13,034(16069) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.id = ?   
[DEBUG] 2017-11-02 12:26:13,035(16070) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:26:13,079(16114) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:13,080(16115) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:13,080(16115) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:26:13,128(16163) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:14,514(17549) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT p.* FROM order_favor o, product p WHERE o.cid=? AND o.pid=p.id   
[DEBUG] 2017-11-02 12:26:14,515(17550) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 0(Long)  
[DEBUG] 2017-11-02 12:26:14,559(17594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 12:26:19,583(22618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 12:26:19,584(22619) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:19,632(22667) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 12:26:22,500(25535) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:26:22,501(25536) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:22,548(25583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:26:22,548(25583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 12:26:22,548(25583) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:22,594(25629) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:23,780(26815) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 12:26:23,780(26815) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:23,825(26860) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 12:26:23,825(26860) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:23,826(26861) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 12:26:23,873(26908) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:23,874(26909) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:23,874(26909) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 12:26:23,921(26956) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:23,921(26956) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:23,921(26956) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:26:23,969(27004) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:23,969(27004) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:23,969(27004) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:26:24,014(27049) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:24,015(27050) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:24,015(27050) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:26:24,061(27096) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:24,062(27097) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:24,062(27097) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:26:24,107(27142) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:26:24,108(27143) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 12:26:24,108(27143) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 12:26:24,154(27189) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:26:27,966(31001) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:26:27,966(31001) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:28,010(31045) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:26:28,012(31047) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:26:28,012(31047) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:28,059(31094) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:26:30,094(33129) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:26:30,094(33129) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2016(String)  
[DEBUG] 2017-11-02 12:26:30,140(33175) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:26:30,141(33176) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:26:30,141(33176) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 18(Long)  
[DEBUG] 2017-11-02 12:26:30,188(33223) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:26:30,188(33223) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:26:30,188(33223) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 19(Long)  
[DEBUG] 2017-11-02 12:26:30,233(33268) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:26:31,430(34465) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:26:31,430(34465) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:26:31,477(34512) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:26:34,003(37038) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:26:34,003(37038) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long)  
[DEBUG] 2017-11-02 12:26:34,048(37083) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[ERROR] 2017-11-02 12:26:50,381(53416) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.model.ReceiptModelFull.lambda$setDetailList$0(ReceiptModelFull.java:57)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at cn.keepfight.qsmanager.model.ReceiptModelFull.setDetailList(ReceiptModelFull.java:57)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:65)
	at cn.keepfight.qsmanager.controller.ReceiptListController.updateReceipt(ReceiptListController.java:197)
	at cn.keepfight.qsmanager.controller.ReceiptController.lambda$initialize$7(ReceiptController.java:115)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 12:28:15,805(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:28:15,823(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:28:15,879(74) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:28:18,814(3009) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:28:18,814(3009) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:28:18,860(3055) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:28:28,383(12578) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:28:28,383(12578) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:28:28,428(12623) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:28:28,430(12625) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:28:28,430(12625) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:28:28,477(12672) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:28:31,064(15259) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:28:31,064(15259) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 12:28:31,111(15306) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 12:28:31,112(15307) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,113(15308) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 12:28:31,159(15354) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:28:31,160(15355) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,161(15356) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 12:28:31,206(15401) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:28:31,207(15402) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,207(15402) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 12:28:31,252(15447) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:28:31,253(15448) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,253(15448) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:28:31,298(15493) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:28:31,299(15494) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,299(15494) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:28:31,344(15539) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:28:31,345(15540) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:28:31,345(15540) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 12:28:31,390(15585) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:28:33,968(18163) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:28:33,968(18163) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:28:34,015(18210) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[ERROR] 2017-11-02 12:28:41,715(25910) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.model.ReceiptModelFull.lambda$setDetailList$0(ReceiptModelFull.java:58)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.Iterator.forEachRemaining(Iterator.java:116)
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at cn.keepfight.qsmanager.model.ReceiptModelFull.setDetailList(ReceiptModelFull.java:58)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:65)
	at cn.keepfight.qsmanager.controller.ReceiptListController.updateReceipt(ReceiptListController.java:197)
	at cn.keepfight.qsmanager.controller.ReceiptController.lambda$initialize$7(ReceiptController.java:115)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 12:32:19,796(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:32:19,814(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:32:19,870(74) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:32:20,009(213) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:32:20,009(213) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:32:20,054(258) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:32:24,046(4250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:32:24,046(4250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:32:24,091(4295) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:32:24,092(4296) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:32:24,093(4297) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:32:24,138(4342) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:32:26,039(6243) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:32:26,040(6244) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 12:32:26,086(6290) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:32:26,087(6291) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:32:26,089(6293) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:32:26,134(6338) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:32:26,135(6339) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:32:26,135(6339) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 12:32:26,180(6384) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:32:26,181(6385) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:32:26,181(6385) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 12:32:26,227(6431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:32:26,227(6431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:32:26,227(6431) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:32:26,272(6476) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:32:28,008(8212) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:32:28,008(8212) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:32:28,054(8258) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:32:32,595(12799) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:32:32,596(12800) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:32:32,641(12845) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[ERROR] 2017-11-02 12:32:37,571(17775) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.model.ReceiptModelFull.lambda$setDetailList$0(ReceiptModelFull.java:61)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1380)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)
	at cn.keepfight.qsmanager.model.ReceiptModelFull.setDetailList(ReceiptModelFull.java:61)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:65)
	at cn.keepfight.qsmanager.controller.ReceiptListController.updateReceipt(ReceiptListController.java:197)
	at cn.keepfight.qsmanager.controller.ReceiptController.lambda$initialize$7(ReceiptController.java:115)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 12:35:16,637(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:35:16,655(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:35:16,723(86) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:35:18,878(2241) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:35:18,879(2242) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:35:18,931(2294) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:35:22,949(6312) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:35:22,950(6313) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:35:23,001(6364) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:35:23,003(6366) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:35:23,003(6366) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:35:23,055(6418) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:35:25,534(8897) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:35:25,535(8898) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 12:35:25,587(8950) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 12:35:25,588(8951) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,589(8952) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 12:35:25,642(9005) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:35:25,642(9005) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,642(9005) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 12:35:25,694(9057) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:35:25,695(9058) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,695(9058) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 12:35:25,747(9110) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:35:25,747(9110) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,748(9111) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:35:25,799(9162) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:35:25,800(9163) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,800(9163) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:35:25,851(9214) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:35:25,852(9215) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:35:25,852(9215) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 12:35:25,903(9266) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:35:28,631(11994) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:35:28,632(11995) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:35:28,685(12048) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:35:29,866(13229) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:35:29,867(13230) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:35:29,919(13282) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[ERROR] 2017-11-02 12:35:34,619(17982) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.model.ReceiptModelFull.setDetailList(ReceiptModelFull.java:59)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:65)
	at cn.keepfight.qsmanager.controller.ReceiptListController.updateReceipt(ReceiptListController.java:197)
	at cn.keepfight.qsmanager.controller.ReceiptController.lambda$initialize$7(ReceiptController.java:115)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 12:36:58,786(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:36:58,805(19) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:36:58,864(78) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:37:01,203(2417) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:37:01,204(2418) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:37:01,252(2466) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:37:06,685(7899) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:37:06,686(7900) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:37:06,732(7946) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:37:06,734(7948) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:37:06,734(7948) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:37:06,782(7996) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:37:08,879(10093) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:37:08,879(10093) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 12:37:08,927(10141) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 12:37:08,928(10142) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:08,929(10143) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 12:37:08,978(10192) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:37:08,979(10193) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:08,979(10193) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 12:37:09,027(10241) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:37:09,027(10241) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:09,028(10242) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 12:37:09,076(10290) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:37:09,077(10291) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:09,077(10291) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 12:37:09,125(10339) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:37:09,126(10340) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:09,126(10340) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 12:37:09,174(10388) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:37:09,174(10388) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:37:09,174(10388) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 12:37:09,222(10436) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:37:10,843(12057) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:37:10,843(12057) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:37:10,892(12106) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:37:12,122(13336) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:37:12,122(13336) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:37:12,170(13384) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[ERROR] 2017-11-02 12:37:16,627(17841) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.model.ReceiptModelFull.setDetailList(ReceiptModelFull.java:60)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:65)
	at cn.keepfight.qsmanager.controller.ReceiptListController.updateReceipt(ReceiptListController.java:197)
	at cn.keepfight.qsmanager.controller.ReceiptController.lambda$initialize$7(ReceiptController.java:115)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 12:39:44,930(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 12:39:44,950(20) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:45,011(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 12:39:47,375(2445) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 12:39:47,376(2446) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:47,421(2491) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:50,030(5100) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 12:39:50,031(5101) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:50,076(5146) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:39:50,078(5148) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:39:50,078(5148) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:50,125(5195) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:39:51,854(6924) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:39:51,854(6924) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 12:39:51,901(6971) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:39:51,902(6972) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:51,903(6973) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:39:51,950(7020) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:51,950(7020) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:51,950(7020) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 12:39:51,996(7066) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:51,997(7067) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:51,997(7067) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 12:39:52,043(7113) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:52,044(7114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:52,044(7114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:39:52,090(7160) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:53,528(8598) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:39:53,528(8598) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:53,575(8645) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:39:54,520(9590) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 12:39:54,521(9591) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 12:39:54,567(9637) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 12:39:57,818(12888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 12:39:57,818(12888) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 12:39:57,933(13003) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:39:57,934(13004) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 12:39:57,935(13005) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), JQ002255(String), -28800000(Long)  
[DEBUG] 2017-11-02 12:39:58,032(13102) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:39:58,033(13103) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:39:58,033(13103) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:58,078(13148) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:58,079(13149) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 12:39:58,079(13149) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 48(Long), Hk327(String), K327特硬(String), 白色(String), 0.58000(BigDecimal), 米(String), 9018.00000(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 12:39:58,177(13247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:39:58,177(13247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:39:58,178(13248) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:58,223(13293) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:58,224(13294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 12:39:58,224(13294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 48(Long), Hk327(String), K327特硬(String), 白色(String), 0.58(BigDecimal), 米(String), 2(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 12:39:58,324(13394) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:39:58,324(13394) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:39:58,324(13394) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:39:58,371(13441) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:58,374(13444) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:39:58,375(13445) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 12:39:58,422(13492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:39:58,422(13492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:58,422(13492) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 48(Long)  
[DEBUG] 2017-11-02 12:39:58,469(13539) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 12:39:58,469(13539) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:58,470(13540) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 12:39:58,516(13586) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:58,516(13586) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:58,516(13586) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 12:39:58,562(13632) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:39:58,562(13632) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:39:58,563(13633) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:39:58,608(13678) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:11,065(26135) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 12:40:11,065(26135) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:40:11,112(26182) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 12:40:13,777(28847) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 12:40:13,778(28848) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 48(Long)  
[DEBUG] 2017-11-02 12:40:13,884(28954) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:40:13,885(28955) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 12:40:13,885(28955) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), JQ002255(String), -28800000(Long)  
[DEBUG] 2017-11-02 12:40:13,985(29055) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:40:13,985(29055) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:40:13,985(29055) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:40:14,030(29100) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:14,031(29101) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 12:40:14,032(29102) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 49(Long), Hk327(String), K327特硬(String), 白色(String), 0.58000(BigDecimal), 米(String), 9018.00000(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 12:40:14,131(29201) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 12:40:14,132(29202) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 12:40:14,132(29202) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 12:40:14,177(29247) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:14,180(29250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 12:40:14,181(29251) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 12:40:14,227(29297) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 12:40:14,227(29297) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:40:14,227(29297) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 49(Long)  
[DEBUG] 2017-11-02 12:40:14,273(29343) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:14,273(29343) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:40:14,274(29344) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 12:40:14,565(29635) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:14,565(29635) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:40:14,565(29635) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 12:40:14,611(29681) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 12:40:14,611(29681) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 12:40:14,611(29681) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 12:40:14,657(29727) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 14:26:08,548(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 14:26:08,573(25) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:08,629(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 14:26:42,374(33826) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 14:26:42,375(33827) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:42,420(33872) --> [Thread-39] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 14:26:46,822(38274) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 14:26:46,823(38275) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:46,869(38321) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 14:26:53,081(44533) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 14:26:53,081(44533) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 14:26:53,127(44579) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 14:26:53,128(44580) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 14:26:53,128(44580) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:53,179(44631) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 17  
[DEBUG] 2017-11-02 14:26:53,213(44665) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 14:26:53,214(44666) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:53,261(44713) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 14:26:53,270(44722) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 14:26:53,270(44722) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:26:53,316(44768) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 14:26:53,319(44771) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 14:26:53,319(44771) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 14:26:53,366(44818) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 14:26:53,366(44818) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 14:26:53,367(44819) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 14:26:53,412(44864) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 14:30:31,693(263145) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 14:30:31,694(263146) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 14:30:31,738(263190) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:08:32,187(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:08:32,205(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:32,262(75) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:08:35,886(3699) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:08:35,887(3700) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:35,934(3747) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:08:38,352(6165) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:08:38,352(6165) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:38,400(6213) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:08:44,843(12656) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 15:08:44,844(12657) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 15:08:44,891(12704) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:08:44,892(12705) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 15:08:44,892(12705) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:44,943(12756) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 17  
[DEBUG] 2017-11-02 15:08:44,971(12784) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 15:08:44,972(12785) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:45,020(12833) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 15:08:45,028(12841) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 15:08:45,029(12842) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:08:45,076(12889) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:08:45,079(12892) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 15:08:45,079(12892) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 15:08:45,126(12939) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:08:45,127(12940) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 15:08:45,127(12940) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 15:08:45,173(12986) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:11:55,280(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:11:55,298(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:11:55,354(74) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:11:57,455(2175) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:11:57,455(2175) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:11:57,499(2219) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:12:04,968(9688) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:12:04,968(9688) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:12:05,013(9733) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:13:51,085(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:13:51,103(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:13:51,166(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:14:05,660(14575) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:14:05,661(14576) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:14:05,712(14627) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:14:12,772(21687) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 15:14:12,773(21688) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 15:14:12,820(21735) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:14:12,821(21736) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 15:14:12,821(21736) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:14:12,873(21788) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 17  
[DEBUG] 2017-11-02 15:14:12,902(21817) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 15:14:12,903(21818) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:14:12,952(21867) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 15:14:12,959(21874) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 15:14:12,960(21875) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:14:13,008(21923) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:14:13,010(21925) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 15:14:13,011(21926) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 15:14:13,058(21973) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:14:13,059(21974) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 15:14:13,059(21974) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 15:14:13,107(22022) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:14:13,892(22807) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 15:14:13,892(22807) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:14:13,946(22861) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 15:23:18,963(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:23:18,986(23) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:23:19,044(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:23:40,383(21420) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:23:40,384(21421) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:23:40,430(21467) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:28:25,660(306697) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 15:28:25,660(306697) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:28:25,707(306744) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:25,709(306746) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:28:25,709(306746) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:28:25,756(306793) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:28:28,171(309208) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:28:28,171(309208) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:28:28,219(309256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:28:33,461(314498) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:28:33,462(314499) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 15:28:33,509(314546) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 15:28:33,510(314547) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,511(314548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 15:28:33,558(314595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 15:28:33,558(314595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,559(314596) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 15:28:33,605(314642) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:33,606(314643) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,606(314643) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 15:28:33,653(314690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:33,653(314690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,653(314690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 15:28:33,700(314737) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:33,701(314738) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,701(314738) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 15:28:33,747(314784) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:33,748(314785) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:33,748(314785) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 15:28:33,794(314831) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:28:40,083(321120) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:28:40,083(321120) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long), 2016(String)  
[DEBUG] 2017-11-02 15:28:40,130(321167) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:40,130(321167) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:40,130(321167) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 18(Long)  
[DEBUG] 2017-11-02 15:28:40,177(321214) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:28:40,177(321214) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:28:40,177(321214) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 19(Long)  
[DEBUG] 2017-11-02 15:28:40,225(321262) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 15:28:44,570(325607) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:28:44,571(325608) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 6(Long), 2016(String)  
[DEBUG] 2017-11-02 15:28:44,618(325655) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:28:46,563(327600) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:28:46,563(327600) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long), 2016(String)  
[DEBUG] 2017-11-02 15:28:46,609(327646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:29:44,096(385133) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:29:44,097(385134) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:29:44,145(385182) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:30:04,515(405552) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 15:30:04,516(405553) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 15:30:04,562(405599) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[ERROR] 2017-11-02 15:30:34,913(435950) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:39,225(440262) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:39,433(440470) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:39,617(440654) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:39,785(440822) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:39,977(441014) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:40,161(441198) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:40,336(441373) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:40,521(441558) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:40,689(441726) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:30:40,841(441878) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 15:34:15,197(656234) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:34:15,197(656234) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:34:15,244(656281) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[ERROR] 2017-11-02 15:34:19,696(660733) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:34:20,152(661189) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[ERROR] 2017-11-02 15:34:53,320(694357) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 15:36:35,452(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:36:35,470(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:36:35,527(75) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:36:37,811(2359) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:36:37,812(2360) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:36:37,858(2406) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:36:42,731(7279) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 15:36:42,732(7280) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:36:42,777(7325) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:36:42,779(7327) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:36:42,780(7328) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:36:42,826(7374) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:36:44,046(8594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:36:44,047(8595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:36:44,094(8642) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[ERROR] 2017-11-02 15:36:49,353(13901) --> [JavaFX Application Thread] cn.keepfight.qsmanager.AppLoader.lambda$main$0(AppLoader.java:22): DefaultUncaughtExceptionHandler from Thread[JavaFX Application Thread,5,main]  
java.lang.NullPointerException
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:169)
	at cn.keepfight.qsmanager.controller.ReceiptAddController.pack(ReceiptAddController.java:31)
	at cn.keepfight.utils.DialogContent.resultConverter(DialogContent.java:51)
	at javafx.scene.control.Dialog.impl_setResultAndClose(Dialog.java:1026)
	at javafx.scene.control.DialogPane.lambda$createButton$599(DialogPane.java:777)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:204)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at cn.keepfight.utils.CustomDialog.construct(CustomDialog.java:102)
	at cn.keepfight.utils.CustomDialog.build(CustomDialog.java:77)
	at cn.keepfight.qsmanager.controller.ReceiptListController.lambda$initialize$5(ReceiptListController.java:95)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Node.fireEvent(Node.java:8413)
	at javafx.scene.control.Button.fire(Button.java:185)
	at com.sun.javafx.scene.control.behavior.ButtonBehavior.mouseReleased(ButtonBehavior.java:182)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:96)
	at com.sun.javafx.scene.control.skin.BehaviorSkinBase$1.handle(BehaviorSkinBase.java:89)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:381)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$353(GlassViewEventHandler.java:417)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:416)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
	at com.sun.glass.ui.win.WinApplication.lambda$null$147(WinApplication.java:177)
	at java.lang.Thread.run(Thread.java:748)
[DEBUG] 2017-11-02 15:38:24,981(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:38:25,001(20) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:25,060(79) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:38:27,117(2136) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 15:38:27,117(2136) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:27,164(2183) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:30,379(5398) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 15:38:30,379(5398) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:30,426(5445) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:38:30,427(5446) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:38:30,428(5447) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:30,476(5495) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:38:31,293(6312) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 15:38:31,293(6312) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:31,342(6361) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 15:38:34,673(9692) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 15:38:34,674(9693) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 15:38:34,722(9741) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 15:38:36,454(11473) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 15:38:36,455(11474) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 23(String), 1509552000000(Long)  
[DEBUG] 2017-11-02 15:38:36,571(11590) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 15:38:36,572(11591) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 15:38:36,572(11591) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:38:36,619(11638) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:41,116(16135) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:38:41,116(16135) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 15:38:41,164(16183) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 15:38:41,165(16184) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:41,166(16185) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 49(Long)  
[DEBUG] 2017-11-02 15:38:41,213(16232) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:41,213(16232) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:41,213(16232) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 15:38:41,260(16279) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:41,260(16279) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:41,261(16280) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 15:38:41,307(16326) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:41,308(16327) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:41,308(16327) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 15:38:41,354(16373) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:41,355(16374) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:41,355(16374) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 50(Long)  
[DEBUG] 2017-11-02 15:38:41,402(16421) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:38:43,337(18356) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:38:43,338(18357) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 15:38:43,385(18404) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 15:38:43,385(18404) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,385(18404) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 15:38:43,433(18452) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 15:38:43,434(18453) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,434(18453) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 15:38:43,481(18500) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:38:43,481(18500) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,482(18501) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 15:38:43,529(18548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:38:43,529(18548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,529(18548) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 15:38:43,576(18595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:38:43,577(18596) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,577(18596) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 15:38:43,626(18645) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:38:43,626(18645) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:43,626(18645) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 15:38:43,674(18693) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:45,985(21004) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:38:45,986(21005) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 15:38:46,034(21053) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 15:38:46,034(21053) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:46,034(21053) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 49(Long)  
[DEBUG] 2017-11-02 15:38:46,081(21100) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:46,081(21100) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:46,082(21101) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 15:38:46,128(21147) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:46,129(21148) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:46,129(21148) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 15:38:46,175(21194) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:46,176(21195) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:46,176(21195) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 15:38:46,223(21242) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:38:46,223(21242) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:38:46,223(21242) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 50(Long)  
[DEBUG] 2017-11-02 15:38:46,270(21289) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 15:55:44,826(1039845) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 15:55:44,826(1039845) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:55:44,876(1039895) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 15:55:52,759(1047778) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 15:55:52,759(1047778) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:55:52,808(1047827) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 15:55:53,231(1048250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 15:55:53,231(1048250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:55:53,281(1048300) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 15:55:53,283(1048302) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 15:55:53,283(1048302) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 15:55:53,330(1048349) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 15:56:48,950(1103969) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, date_format(r.rdate, '%s')||'000' AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 15:56:48,951(1103970) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 15:56:48,999(1104018) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 15:56:49,000(1104019) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,000(1104019) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 15:56:49,047(1104066) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 15:56:49,047(1104066) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,048(1104067) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 15:56:49,095(1104114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:56:49,095(1104114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,095(1104114) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 15:56:49,142(1104161) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:56:49,143(1104162) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,143(1104162) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 15:56:49,190(1104209) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:56:49,190(1104209) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,190(1104209) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 15:56:49,238(1104257) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 15:56:49,238(1104257) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 15:56:49,238(1104257) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 15:56:49,285(1104304) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:02:16,206(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 16:02:16,224(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:02:16,287(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 16:02:18,246(2040) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 16:02:18,247(2041) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:02:18,298(2092) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:02:22,944(6738) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 16:02:22,945(6739) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:02:22,995(6789) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:02:22,997(6791) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:02:22,997(6791) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:02:23,050(6844) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:02:25,640(9434) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:02:25,641(9435) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:02:25,693(9487) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 16:02:25,694(9488) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,694(9488) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 16:02:25,746(9540) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:02:25,746(9540) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,747(9541) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:02:25,798(9592) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:02:25,799(9593) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,800(9594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:02:25,852(9646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:02:25,852(9646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,852(9646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:02:25,904(9698) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:02:25,904(9698) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,904(9698) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:02:25,956(9750) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:02:25,956(9750) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:02:25,956(9750) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:02:26,008(9802) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:05:45,965(209759) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? AND date_format(r.rdate, '%m') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:05:45,966(209760) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String), 01(String)  
[DEBUG] 2017-11-02 16:05:46,017(209811) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:05:48,037(211831) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:05:48,038(211832) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:05:48,090(211884) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 16:05:48,090(211884) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,090(211884) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 16:05:48,141(211935) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:05:48,142(211936) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,142(211936) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:05:48,194(211988) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:05:48,195(211989) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,195(211989) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:05:48,246(212040) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:05:48,247(212041) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,247(212041) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:05:48,298(212092) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:05:48,299(212093) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,299(212093) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:05:48,351(212145) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:05:48,352(212146) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:05:48,352(212146) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:05:48,403(212197) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:31,456(255250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:06:31,456(255250) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:31,509(255303) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:06:33,957(257751) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 16:06:33,958(257752) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 16:06:34,069(257863) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:34,069(257863) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 16:06:34,070(257864) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), JQ002255(String), 1476547200000(Long)  
[DEBUG] 2017-11-02 16:06:34,183(257977) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:34,183(257977) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:34,183(257977) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:34,234(258028) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:34,235(258029) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:34,236(258030) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 51(Long), T327(String), T327特硬(String), (String), 0.55000(BigDecimal), 米(String), 20966.40000(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 16:06:34,345(258139) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:34,345(258139) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:34,345(258139) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:34,396(258190) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:34,396(258190) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:34,397(258191) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 51(Long), T327(String), T327特硬(String), (String), 0.68000(BigDecimal), 米(String), 6334.20000(BigDecimal), 80*20(String)  
[DEBUG] 2017-11-02 16:06:34,515(258309) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:34,515(258309) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:34,515(258309) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:34,566(258360) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:34,569(258363) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:06:34,570(258364) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:06:34,622(258416) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 16:06:34,623(258417) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,623(258417) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 51(Long)  
[DEBUG] 2017-11-02 16:06:34,674(258468) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:34,674(258468) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,674(258468) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:06:34,726(258520) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:34,726(258520) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,727(258521) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:06:34,779(258573) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:34,779(258573) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,779(258573) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:06:34,830(258624) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:34,831(258625) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,831(258625) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:06:34,882(258676) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:34,882(258676) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:34,882(258676) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:06:34,933(258727) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:36,165(259959) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:06:36,166(259960) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:36,218(260012) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:06:37,110(260904) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:06:37,110(260904) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 16:06:37,162(260956) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:39,328(263122) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:06:39,329(263123) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 16:06:39,380(263174) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:43,571(267365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 16:06:43,571(267365) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 51(Long)  
[DEBUG] 2017-11-02 16:06:43,691(267485) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:43,692(267486) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 16:06:43,692(267486) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), JQ002255(String), 1476547200000(Long)  
[DEBUG] 2017-11-02 16:06:43,801(267595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:43,801(267595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:43,801(267595) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:43,852(267646) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:43,853(267647) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:43,854(267648) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long), T327(String), T327特硬(String), (String), 0.55000(BigDecimal), 米(String), 20966.40000(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 16:06:43,962(267756) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:43,962(267756) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:43,962(267756) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:44,013(267807) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:44,014(267808) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:44,014(267808) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long), T327(String), T327特硬(String), (String), 0.68000(BigDecimal), 米(String), 6334.20000(BigDecimal), 80*20(String)  
[DEBUG] 2017-11-02 16:06:44,122(267916) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:44,122(267916) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:44,123(267917) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:44,173(267967) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:44,174(267968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:44,174(267968) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long), Hk327(String), K327特硬(String), 白色(String), 0.58(BigDecimal), 米(String), 22(BigDecimal), 85*12.5(String)  
[DEBUG] 2017-11-02 16:06:44,289(268083) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:44,290(268084) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:44,290(268084) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:44,340(268134) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:44,343(268137) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:06:44,344(268138) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:06:44,396(268190) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 16:06:44,396(268190) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,397(268191) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long)  
[DEBUG] 2017-11-02 16:06:44,448(268242) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:44,449(268243) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,449(268243) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:06:44,500(268294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:44,500(268294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,500(268294) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:06:44,552(268346) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:44,552(268346) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,552(268346) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:06:44,604(268398) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:44,604(268398) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,604(268398) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:06:44,657(268451) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:44,657(268451) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:44,657(268451) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:06:44,709(268503) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:46,334(270128) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:06:46,335(270129) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:46,386(270180) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:06:49,363(273157) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:06:49,363(273157) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 16:06:49,414(273208) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:57,699(281493) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 16:06:57,700(281494) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 231(String), 1476288000000(Long)  
[DEBUG] 2017-11-02 16:06:57,824(281618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:57,824(281618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:57,824(281618) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:57,875(281669) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:57,876(281670) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:06:57,876(281670) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long), SGM(String), 丝瓜棉(String), (String), 0.27(BigDecimal), 片(String), 23(BigDecimal), 120*75*30(String)  
[DEBUG] 2017-11-02 16:06:57,984(281778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:06:57,984(281778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:06:57,984(281778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:06:58,035(281829) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:58,036(281830) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:06:58,036(281830) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:06:58,089(281883) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 16:06:58,089(281883) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,089(281883) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long)  
[DEBUG] 2017-11-02 16:06:58,140(281934) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:58,141(281935) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,141(281935) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long)  
[DEBUG] 2017-11-02 16:06:58,192(281986) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:06:58,192(281986) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,193(281987) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:06:58,244(282038) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:58,244(282038) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,245(282039) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:06:58,296(282090) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:58,296(282090) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,296(282090) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:06:58,348(282142) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:06:58,348(282142) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,348(282142) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:06:58,400(282194) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:06:58,400(282194) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:06:58,400(282194) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:06:58,452(282246) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:08,509(292303) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:07:08,510(292304) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:07:08,561(292355) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:07:16,592(300386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:07:16,592(300386) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 16:07:16,643(300437) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:07:23,259(307053) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt (sid, serial, rdate) VALUES (?, ?, from_unixtime(?/1000))   
[DEBUG] 2017-11-02 16:07:23,260(307054) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long), 钱钱钱2(String), 1476288000000(Long)  
[DEBUG] 2017-11-02 16:07:23,370(307164) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:07:23,370(307164) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:07:23,370(307164) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:07:23,421(307215) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:23,421(307215) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: INSERT INTO receipt_detail (rid, serial, name, color, price, unit, num, spec) VALUES (?, ?, ?, ?, ?, ?, ?, ?)   
[DEBUG] 2017-11-02 16:07:23,422(307216) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 54(Long), 213(String), 123(String), 123(String), 123123123(BigDecimal), 123(String), 123(BigDecimal), 123123(String)  
[DEBUG] 2017-11-02 16:07:23,533(307327) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:07:23,534(307328) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT last_insert_id();   
[DEBUG] 2017-11-02 16:07:23,534(307328) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:07:23,585(307379) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:23,586(307380) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:07:23,586(307380) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:07:23,638(307432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 16:07:23,638(307432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,638(307432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long)  
[DEBUG] 2017-11-02 16:07:23,690(307484) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:07:23,690(307484) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,690(307484) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long)  
[DEBUG] 2017-11-02 16:07:23,741(307535) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:23,741(307535) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,742(307536) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:07:23,793(307587) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:07:23,793(307587) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,794(307588) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:07:23,844(307638) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:07:23,845(307639) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,845(307639) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:07:23,896(307690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:07:23,896(307690) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,897(307691) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:07:23,948(307742) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:07:23,949(307743) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:23,949(307743) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:07:24,000(307794) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:25,734(309528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:07:25,734(309528) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long), 2016(String)  
[DEBUG] 2017-11-02 16:07:25,785(309579) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:25,786(309580) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:07:25,786(309580) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 54(Long)  
[DEBUG] 2017-11-02 16:07:25,837(309631) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:07:41,029(324823) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:07:41,030(324824) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:07:41,081(324875) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:07:42,925(326719) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:07:42,926(326720) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 16:07:42,977(326771) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:22:04,339(1188133) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:04,339(1188133) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 6(Long)  
[DEBUG] 2017-11-02 16:22:04,391(1188185) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:22:07,636(1191430) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:07,636(1191430) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 16:22:07,687(1191481) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:22:07,772(1191566) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:07,772(1191566) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 16:22:07,825(1191619) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:22:07,931(1191725) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:07,932(1191726) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long)  
[DEBUG] 2017-11-02 16:22:07,983(1191777) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 16:22:08,068(1191862) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,068(1191862) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long)  
[DEBUG] 2017-11-02 16:22:08,119(1191913) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:22:08,283(1192077) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,283(1192077) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 5(Long)  
[DEBUG] 2017-11-02 16:22:08,335(1192129) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 16:22:08,443(1192237) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,443(1192237) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 16:22:08,494(1192288) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:22:08,587(1192381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,587(1192381) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 8(Long)  
[DEBUG] 2017-11-02 16:22:08,638(1192432) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:22:08,747(1192541) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,747(1192541) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 6(Long)  
[DEBUG] 2017-11-02 16:22:08,798(1192592) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:22:08,891(1192685) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM material WHERE sid=? ORDER BY serial   
[DEBUG] 2017-11-02 16:22:08,891(1192685) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 9(Long)  
[DEBUG] 2017-11-02 16:22:08,943(1192737) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:22:10,116(1193910) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 16:22:10,116(1193910) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:22:10,169(1193963) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 16:22:19,102(1202896) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 16:22:19,103(1202897) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:22:19,150(1202944) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 16:22:23,526(1207320) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT stuff.id id, stuff.serial serial, stuff.name name, stuff.salary_basic salary_basic, stuff.salary_annual salary_annual, operator.id operator_id, operator.account operator_account, operator.password operator_password, operator.authority operator_authority, operator.last_login_stamp operator_last_login_stamp, user.id operator_user_id, user.nickname operator_user_nickname, user.halt operator_user_halt, user.note operator_user_note FROM stuff, operator, user WHERE stuff.operator_id = operator.id AND operator.user_id = user.id ORDER BY stuff.serial   
[DEBUG] 2017-11-02 16:22:23,527(1207321) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:22:23,579(1207373) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 11  
[DEBUG] 2017-11-02 16:25:12,211(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 16:25:12,229(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:25:12,296(85) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 16:25:14,364(2153) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'DENGWEI'   
[DEBUG] 2017-11-02 16:25:14,364(2153) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:25:14,420(2209) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:25:22,214(10003) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM predict_history WHERE year = ? AND month = ? LIMIT 1   
[DEBUG] 2017-11-02 16:25:22,215(10004) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 16:25:22,261(10050) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:25:22,262(10051) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.sid AS uid, concat(s.serial, '-', s.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.sid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_sup_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.sid = x.sid) AS count FROM view_sup_month_trade t ) AS t LEFT JOIN ( SELECT sup_id AS sid, sum(total) AS sum FROM remit_sup GROUP BY sup_id ) AS r ON t.sid = r.sid , supply s WHERE ifnull(r.sum, 0) < t.count AND s.id = t.sid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 16:25:22,262(10051) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:25:22,313(10102) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 18  
[DEBUG] 2017-11-02 16:25:22,344(10133) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT t.cid AS uid, concat(cust.serial, '-', cust.name) AS name, t.year AS year, t.month AS month, if(((t.count - ifnull(r.sum, 0)) < t.sum), t.count - ifnull(r.sum, 0), t.sum) AS leftsum FROM ( SELECT t.cid, t.year, t.month, t.sum, (SELECT SUM(x.sum) FROM view_cust_month_trade x WHERE concat(x.year, x.month) <= concat(t.year, t.month) AND t.cid = x.cid) AS count FROM view_cust_month_trade t ) AS t LEFT JOIN ( SELECT cust_id AS cid, sum(total) AS sum FROM remit_cust GROUP BY cust_id ) AS r ON t.cid = r.cid , custom cust WHERE ifnull(r.sum, 0) < t.count AND cust.id = t.cid ORDER BY uid, year, month   
[DEBUG] 2017-11-02 16:25:22,345(10134) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:25:22,392(10181) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 4  
[DEBUG] 2017-11-02 16:25:22,402(10191) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT ifnull((SELECT sum(s.salary) FROM stuff_salary s ), 0) - ifnull((SELECT sum(i.income) FROM stuff_income i), 0) AS totoal   
[DEBUG] 2017-11-02 16:25:22,403(10192) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:25:22,449(10238) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:25:22,452(10241) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax WHERE year = ? AND month = ?   
[DEBUG] 2017-11-02 16:25:22,452(10241) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 16:25:22,498(10287) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:25:22,499(10288) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM tax_invoice WHERE tid = ?   
[DEBUG] 2017-11-02 16:25:22,499(10288) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 7(Long)  
[DEBUG] 2017-11-02 16:25:22,545(10334) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:26:49,790(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 16:26:49,807(17) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:26:49,865(75) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 16:26:52,251(2461) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 16:26:52,251(2461) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:26:52,299(2509) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:27:44,545(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 16:27:44,562(17) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:27:44,619(74) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 16:27:46,995(2450) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 16:27:46,996(2451) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:27:47,042(2497) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:28:05,268(20723) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 16:28:05,268(20723) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:28:05,314(20769) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:28:05,316(20771) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:28:05,316(20771) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:28:05,363(20818) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:28:08,039(23494) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:28:08,039(23494) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:28:08,086(23541) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 16:28:08,087(23542) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,088(23543) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long)  
[DEBUG] 2017-11-02 16:28:08,135(23590) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:28:08,136(23591) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,136(23591) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long)  
[DEBUG] 2017-11-02 16:28:08,182(23637) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:28:08,182(23637) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,183(23638) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:28:08,229(23684) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:28:08,230(23685) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,230(23685) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:28:08,276(23731) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:28:08,276(23731) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,276(23731) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:28:08,323(23778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:28:08,323(23778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,323(23778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:28:08,370(23825) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:28:08,370(23825) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:28:08,370(23825) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:28:08,416(23871) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:28:24,426(39881) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 16:28:24,426(39881) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 37(Long)  
[DEBUG] 2017-11-02 16:28:24,535(39990) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:29:18,032(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 16:29:18,051(19) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:18,113(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 16:29:35,356(17324) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 16:29:35,357(17325) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:35,408(17376) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:29:36,478(18446) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM product ORDER BY serial   
[DEBUG] 2017-11-02 16:29:36,479(18447) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:36,533(18501) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 21  
[DEBUG] 2017-11-02 16:29:43,715(25683) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:29:43,715(25683) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:43,767(25735) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:29:48,643(30611) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(rdate, '%Y') as year FROM receipt ORDER BY year   
[DEBUG] 2017-11-02 16:29:48,643(30611) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:48,694(30662) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:29:48,694(30662) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM supply ORDER BY serial   
[DEBUG] 2017-11-02 16:29:48,695(30663) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 16:29:48,747(30715) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 9  
[DEBUG] 2017-11-02 16:29:50,757(32725) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:29:50,757(32725) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2017(String)  
[DEBUG] 2017-11-02 16:29:50,809(32777) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 16:29:50,810(32778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:29:50,810(32778) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 49(Long)  
[DEBUG] 2017-11-02 16:29:50,862(32830) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:29:50,863(32831) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:29:50,863(32831) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 50(Long)  
[DEBUG] 2017-11-02 16:29:50,913(32881) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 0  
[DEBUG] 2017-11-02 16:29:50,914(32882) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:29:50,914(32882) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 16:29:50,964(32932) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:29:50,965(32933) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:29:50,965(32933) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 23(Long)  
[DEBUG] 2017-11-02 16:29:51,016(32984) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:29:51,016(32984) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:29:51,016(32984) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 22(Long)  
[DEBUG] 2017-11-02 16:29:51,067(33035) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:29:58,626(40594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 16:29:58,626(40594) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 50(Long)  
[DEBUG] 2017-11-02 16:29:58,740(40708) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 16:30:30,538(72506) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT r.id AS id, r.sid AS sid, r.serial AS serial, concat(UNIX_TIMESTAMP(r.rdate), '000') AS rdate, s.serial || '-' || s.name AS supply FROM receipt r, supply s WHERE r.sid = ? AND r.sid=s.id AND date_format(r.rdate, '%Y') = ? ORDER BY rdate DESC   
[DEBUG] 2017-11-02 16:30:30,538(72506) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 4(Long), 2016(String)  
[DEBUG] 2017-11-02 16:30:30,589(72557) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 6  
[DEBUG] 2017-11-02 16:30:30,590(72558) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,590(72558) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 52(Long)  
[DEBUG] 2017-11-02 16:30:30,641(72609) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:30:30,641(72609) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,642(72610) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long)  
[DEBUG] 2017-11-02 16:30:30,692(72660) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 16:30:30,693(72661) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,693(72661) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 28(Long)  
[DEBUG] 2017-11-02 16:30:30,745(72713) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:30:30,745(72713) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,746(72714) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 16:30:30,797(72765) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:30:30,798(72766) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,798(72766) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 27(Long)  
[DEBUG] 2017-11-02 16:30:30,849(72817) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 16:30:30,849(72817) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM receipt_detail WHERE rid = ?   
[DEBUG] 2017-11-02 16:30:30,850(72818) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 26(Long)  
[DEBUG] 2017-11-02 16:30:30,901(72869) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 16:32:45,716(207684) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: DELETE FROM receipt WHERE id = ?   
[DEBUG] 2017-11-02 16:32:45,716(207684) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 53(Long)  
[DEBUG] 2017-11-02 16:32:45,825(207793) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==    Updates: 1  
[DEBUG] 2017-11-02 17:31:41,608(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 17:31:41,626(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:31:41,687(79) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 17:31:43,858(2250) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 17:31:43,859(2251) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:31:43,903(2295) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:32:25,326(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 17:32:25,343(17) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:32:25,398(72) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 17:32:27,836(2510) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 17:32:27,837(2511) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:32:27,881(2555) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:32:35,295(9969) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 17:32:35,296(9970) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 17:32:35,341(10015) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 17:33:54,876(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 17:33:54,896(20) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:33:54,957(81) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 17:33:56,849(1973) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 17:33:56,850(1974) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:33:56,894(2018) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:34:04,536(9660) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 17:34:04,537(9661) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 17:34:04,583(9707) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 17:35:28,313(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 17:35:28,331(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:35:28,388(75) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 17:35:30,316(2003) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 17:35:30,316(2003) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:35:30,362(2049) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:35:35,663(7350) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 17:35:35,663(7350) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 17:35:35,709(7396) --> [Thread-42] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 17:36:15,473(47160) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 17:36:15,473(47160) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:36:15,521(47208) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 17:36:15,523(47210) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT DISTINCT date_format(orderdate, '%Y') AS year FROM orders ORDER BY year   
[DEBUG] 2017-11-02 17:36:15,523(47210) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:36:15,569(47256) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:36:16,842(48529) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 17:36:16,842(48529) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 17:36:16,889(48576) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 7  
[DEBUG] 2017-11-02 17:36:16,891(48578) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:16,891(48578) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 17:36:16,939(48626) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:36:16,941(48628) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:16,942(48629) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 35(Long)  
[DEBUG] 2017-11-02 17:36:16,990(48677) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 17:36:16,990(48677) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:16,991(48678) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 30(Long)  
[DEBUG] 2017-11-02 17:36:17,037(48724) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 17:36:17,037(48724) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:17,038(48725) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 29(Long)  
[DEBUG] 2017-11-02 17:36:17,085(48772) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 17:36:17,086(48773) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:17,086(48773) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 24(Long)  
[DEBUG] 2017-11-02 17:36:17,133(48820) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:36:17,133(48820) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:17,133(48820) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 17:36:17,180(48867) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:36:17,180(48867) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:17,180(48867) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2(Long)  
[DEBUG] 2017-11-02 17:36:17,227(48914) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 17:36:20,135(51822) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.id AS id, cid, o.serial AS serial, concat(unix_timestamp(orderdate), '000') AS orderdate, o.note AS note, concat(c.serial , '-' , c.name) AS cust, deli FROM orders o, custom c WHERE o.cid=c.id AND o.cid = ? ORDER BY orderdate DESC   
[DEBUG] 2017-11-02 17:36:20,135(51822) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 13(Long)  
[DEBUG] 2017-11-02 17:36:20,181(51868) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 2  
[DEBUG] 2017-11-02 17:36:20,182(51869) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:20,182(51869) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 36(Long)  
[DEBUG] 2017-11-02 17:36:20,228(51915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:36:20,228(51915) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM order_item WHERE oid = ?   
[DEBUG] 2017-11-02 17:36:20,229(51916) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 21(Long)  
[DEBUG] 2017-11-02 17:36:20,277(51964) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 17:37:01,216(92903) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 17:37:01,216(92903) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 17:37:01,262(92949) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 18:11:05,087(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 18:11:05,108(21) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:11:05,165(78) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 18:11:12,213(7126) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 18:11:12,214(7127) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:11:12,261(7174) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:11:19,567(14480) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:11:19,567(14480) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:11:19,613(14526) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:11:24,663(19576) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:11:24,664(19577) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 18:11:24,711(19624) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 18:11:26,759(21672) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:11:26,759(21672) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 18:11:26,805(21718) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 18:11:29,567(24480) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:11:29,568(24481) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 8(Long)  
[DEBUG] 2017-11-02 18:11:29,612(24525) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:11:31,422(26335) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:11:31,422(26335) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 18:11:31,468(26381) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 18:18:37,593(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 18:18:37,611(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:18:37,666(73) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 18:18:40,442(2849) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 18:18:40,442(2849) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:18:40,486(2893) --> [Thread-40] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:18:47,993(10400) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:18:47,994(10401) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:18:48,040(10447) --> [Thread-43] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:19:03,589(25996) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:19:03,590(25997) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 18:19:03,636(26043) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 18:19:09,726(32133) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:19:09,726(32133) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 9(Long)  
[DEBUG] 2017-11-02 18:19:09,771(32178) --> [Thread-45] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 5  
[DEBUG] 2017-11-02 18:21:19,427(161834) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:21:19,436(161843) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 18:21:19,481(161888) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
[DEBUG] 2017-11-02 18:21:22,875(165282) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:21:22,876(165283) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:21:22,921(165328) --> [Thread-47] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:21:25,146(167553) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:21:25,147(167554) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:21:25,192(167599) --> [Thread-49] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:22,284(0) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE utype=2 ORDER BY serial   
[DEBUG] 2017-11-02 18:27:22,302(18) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:27:22,358(74) --> [JavaFX Application Thread] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 16  
[DEBUG] 2017-11-02 18:27:34,239(11955) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT * FROM custom WHERE acc = 'dengwei' AND psw = 'dengwei'   
[DEBUG] 2017-11-02 18:27:34,240(11956) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters:   
[DEBUG] 2017-11-02 18:27:34,285(12001) --> [Thread-41] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:41,283(18999) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:41,284(19000) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:41,331(19047) --> [Thread-44] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:48,145(25861) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:48,146(25862) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:48,192(25908) --> [Thread-46] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:49,681(27397) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:49,682(27398) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:49,728(27444) --> [Thread-48] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:50,713(28429) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:50,714(28430) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:50,761(28477) --> [Thread-50] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:53,505(31221) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:53,505(31221) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:53,551(31267) --> [Thread-52] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:27:55,881(33597) --> [Thread-54] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:27:55,882(33598) --> [Thread-54] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:27:55,928(33644) --> [Thread-54] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:28:56,136(93852) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:28:56,137(93853) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:28:56,184(93900) --> [Thread-56] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:29:51,688(149404) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:29:51,689(149405) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:29:51,735(149451) --> [Thread-58] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:29:54,953(152669) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:29:54,954(152670) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 11(Long)  
[DEBUG] 2017-11-02 18:29:55,000(152716) --> [Thread-60] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 1  
[DEBUG] 2017-11-02 18:29:56,987(154703) --> [Thread-61] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==>  Preparing: SELECT o.cid AS cid, concat(c.serial, '-', c.name) cname, sum(num) AS sum, i.serial AS item_serial FROM orders o, order_item i, custom c WHERE o.id = i.oid AND c.id = o.cid AND DATE_FORMAT(o.orderdate, '%Y') = ? AND DATE_FORMAT(o.orderdate, '%m') = ? GROUP BY o.cid, i.serial;   
[DEBUG] 2017-11-02 18:29:56,987(154703) --> [Thread-61] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): ==> Parameters: 2017(Long), 10(Long)  
[DEBUG] 2017-11-02 18:29:57,034(154750) --> [Thread-61] org.apache.ibatis.logging.commons.JakartaCommonsLoggingImpl.debug(JakartaCommonsLoggingImpl.java:49): <==      Total: 3  
